name: CD

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Tag'
        required: true

env:
  CONTAINER_NAME: 135project
  IMAGE_NAME: 135project
  REGISTRY_HOST: ${{ secrets.REGISTRY_HOST }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USER }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  URL: ${{ secrets.URL }}

jobs:
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: CD/1. Add dynamic environment variables
        uses: allenevans/set-env@v2.0.0
        with:
          IMAGE_VERSION: ${{ github.event.inputs.tag }}
          IMAGE: ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }}

      - name: CD/2. Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: CONTAINER_NAME,IMAGE,REGISTRY_HOST,REGISTRY_USERNAME,REGISTRY_PASSWORD,URL
          script: |
            # Log into repository
            echo $REGISTRY_PASSWORD | docker login $REGISTRY_HOST -u $REGISTRY_USERNAME --password-stdin
            # Stop and remove old instance
            docker stop "$CONTAINER_NAME"
            docker rm "$CONTAINER_NAME"
            # Start new instance
            docker create \
            -l 'traefik.enable'=true \
            -l 'traefik.http.routers.135project-secured.entrypoints'=web-secured \
            -l 'traefik.http.routers.135project-secured.rule'="HOST(\`$URL\`)" \
            -l 'traefik.http.routers.135project-secured.tls.certresolver'=myhttpchallenge \
            -l 'traefik.http.routers.135project.entrypoints'=web \
            -l 'traefik.http.routers.135project.middlewares'='redirect@file' \
            -l 'traefik.http.routers.135project.rule'="HOST(\`$URL\`)" \
            --name "$CONTAINER_NAME" \
            --restart always "$IMAGE"
            docker network connect web "$CONTAINER_NAME"
            docker start "$CONTAINER_NAME"
